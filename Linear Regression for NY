import pandas as pd
import numpy as np
from sklearn import datasets, linear_model
from sklearn.metrics import mean_squared_error
from sklearn.linear_model import LinearRegression
import matplotlib.pyplot as plt
from scipy import stats


chunk = pd.read_csv('NY DATAFRAME FINAL.csv',chunksize = 10000000)
df_NY = pd.concat(chunk)

chunk = pd.read_csv('LA DATAFRAME FINAL.csv',chunksize = 10000000)
df_LA = pd.concat(chunk)

chunk = pd.read_csv('CHICAGO DATAFRAME FINAL.csv',chunksize = 10000000)
df_CHI = pd.concat(chunk)


#Test whether the datasets are statistically different 
#Perform a linear regression:
#More precisely, linear regression is used to determine the character and strength 
#of the association between a dependent variable and a series of other independent 
#variables

contingency_NY = pd.crosstab(df_NY['CRIME_DESCRIPTION'], df_NY['YEAR'])
contingency_LA = pd.crosstab(df_LA['CRIME_DESCRIPTION'], df_LA['YEAR'])
contingency_CHI = pd.crosstab(df_CHI['CRIME_DESCRIPTION'], df_CHI['YEAR'])
print(contingency_NY)
# contingency_NY.info()

#NY Linear regression

##CHANGE contigency_NY to contigency_LA
arson = contingency_NY.iloc[0, :].values.reshape((-1,1))  
battery = contingency_NY.iloc[1, :].values.reshape((-1,1)) 
burglary = contingency_NY.iloc[2, :].values.reshape((-1,1))  
dangerousWeapons= contingency_NY.iloc[3, :].values.reshape((-1,1)) 
homicide = contingency_NY.iloc[4, :].values.reshape((-1,1))  
narcotics = contingency_NY.iloc[5, :].values.reshape((-1,1)) 
petitLarceny = contingency_NY.iloc[6, :].values.reshape((-1,1))
robbery = contingency_NY.iloc[7, :].values.reshape((-1,1))  
sexualAssault = contingency_NY.iloc[8, :].values.reshape((-1,1)) 
Year = np.array([1,2,3,4,5]).reshape((-1,1))

##NY to LA
NYmodel1 = LinearRegression().fit(Year, arson)
NYmodel2 = LinearRegression().fit(Year, battery)
NYmodel3 = LinearRegression().fit(Year, burglary)
NYmodel4 = LinearRegression().fit(Year, dangerousWeapons)
NYmodel5 = LinearRegression().fit(Year, homicide)
NYmodel6 = LinearRegression().fit(Year, narcotics)
NYmodel7 = LinearRegression().fit(Year, petitLarceny)
NYmodel8 = LinearRegression().fit(Year, robbery)
NYmodel9 = LinearRegression().fit(Year, sexualAssault)


print(plt.plot(Year, arson))
print(plt.plot(Year, battery))
print(plt.plot(Year, burglary))
print(plt.plot(Year, dangerousWeapons))
print(plt.plot(Year, homicide))
print(plt.plot(Year, narcotics))
print(plt.plot(Year, petitLarceny))
print(plt.plot(Year, robbery))
print(plt.plot(Year, sexualAssault))

# df['ones'] = 1
# A = df[['arson','ones']]
# m,c = np.linalg.lstsq()
# y_line = c + m*arson
# print()
# print(plt.plot(Year, battery))
# print()
# print(plt.plot(Year, burglary))
# print()
# print(plt.plotr(Year, dangerousWeapons))
# print()
# print(plt.plotr(Year, homicide))
# print()
# print(plt.plot(Year, narcotics))
# print()
# print(plt.plot(Year, petitLarceny))
# print()
# print(plt.plot(Year, robbery))
# print()
# print(plt.plot(Year, sexualAssault))
# print()

##NY to LA for each paragraph below
r_sq = NYmodel1.score(Year, arson)
print(f"The coefficient of determination is: {r_sq}")
print(f"The intercept is: {NYmodel1.intercept_}")
print(f"The slope is : {NYmodel1.coef_}")
y_pred1 = NYmodel1.predict(Year)
print(f"The predicted responses are: \n{y_pred1}")
print()

r_sq = NYmodel2.score(Year, battery)
print(f"The coefficient of determination is: {r_sq}")
print(f"The intercept is: {NYmodel2.intercept_}")
print(f"The slope is : {NYmodel2.coef_}")
y_pred2 = NYmodel2.predict(Year)
print(f"The predicted responses are: \n{y_pred2}")
print()

r_sq = NYmodel3.score(Year, burglary)
print(f"The coefficient of determination is: {r_sq}")
print(f"The intercept is: {NYmodel3.intercept_}")
print(f"The slope is : {NYmodel3.coef_}")
y_pred3 = NYmodel3.predict(Year)
print(f"The predicted responses are: \n{y_pred3}")
print()

r_sq = NYmodel4.score(Year, dangerousWeapons)
print(f"The coefficient of determination is: {r_sq}")
print(f"The intercept is: {NYmodel4.intercept_}")
print(f"The slope is : {NYmodel4.coef_}")
y_pred4 = NYmodel4.predict(Year)
print(f"The predicted responses are: \n{y_pred4}")
print()

r_sq = NYmodel5.score(Year, homicide)
print(f"The coefficient of determination is: {r_sq}")
print(f"The intercept is: {NYmodel5.intercept_}")
print(f"The slope is : {NYmodel5.coef_}")
y_pred5 = NYmodel5.predict(Year)
print(f"The predicted responses are: \n{y_pred5}")
print()

r_sq = NYmodel6.score(Year, narcotics)
print(f"The coefficient of determination is: {r_sq}")
print(f"The intercept is: {NYmodel6.intercept_}")
print(f"The slope is : {NYmodel6.coef_}")
y_pred6 = NYmodel6.predict(Year)
print(f"The predicted responses are: \n{y_pred6}")
print()

r_sq = NYmodel7.score(Year, petitLarceny)
print(f"The coefficient of determination is: {r_sq}")
print(f"The intercept is: {NYmodel7.intercept_}")
print(f"The slope is : {NYmodel7.coef_}")
y_pred7 = NYmodel7.predict(Year)
print(f"The predicted responses are: \n{y_pred7}")
print()

r_sq = NYmodel8.score(Year, robbery)
print(f"The coefficient of determination is: {r_sq}")
print(f"The intercept is: {NYmodel8.intercept_}")
print(f"The slope is : {NYmodel8.coef_}")
y_pred8 = NYmodel8.predict(Year)
print(f"The predicted responses are: \n{y_pred8}")
print()

r_sq = NYmodel9.score(Year, sexualAssault)
print(f"The coefficient of determination is: {r_sq}")
print(f"The intercept is: {NYmodel9.intercept_}")
print(f"The slope is : {NYmodel9.coef_}")
y_pred9 = NYmodel9.predict(Year)
print(f"The predicted responses are: \n{y_pred9}")
print()
